(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))l(t);new MutationObserver(t=>{for(const r of t)if(r.type==="childList")for(const s of r.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&l(s)}).observe(document,{childList:!0,subtree:!0});function u(t){const r={};return t.integrity&&(r.integrity=t.integrity),t.referrerPolicy&&(r.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?r.credentials="include":t.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function l(t){if(t.ep)return;t.ep=!0;const r=u(t);fetch(t.href,r)}})();const d=document.querySelector("#app"),i=document.querySelectorAll(".card");let n=i.length;const a=new IntersectionObserver(o=>{o.forEach(e=>{e.target.classList.toggle("show",e.isIntersecting)})},{threshold:.7}),c=new IntersectionObserver(o=>{const e=o[0];e.isIntersecting&&(e.target.classList.toggle("show",e.isIntersecting),f())},{threshold:.7});c.observe(i[n-1]);i.forEach(o=>{a.observe(o)});function f(){if(d){c.disconnect();for(let o=0;o<=11;o++){const e=document.createElement("div");e.classList.add("card"),e.textContent=`Hello ${n+1}`,d.append(e),n+=1,a.observe(e),o===11&&c.observe(e)}}}
